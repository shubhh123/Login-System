package com.example.demo.services;

import java.util.HashSet;
import java.util.Set;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.example.demo.model.ApplicationUser;
import com.example.demo.model.Role;


/*
 * I dont want the user to enter the username and password everytime.
 * For this i want to generate a token, which will be generated for the first request
 * so that the user can use to send
 * requests to the server.
 */




@Service
public class UserService implements UserDetailsService{

	
	private PasswordEncoder passwordEncoder;
	
	@Autowired
	public UserService(PasswordEncoder passwordEncoder) {
		this.passwordEncoder = passwordEncoder;
	}
	
	
	/*
	 * Spring Security automatically calls loadUserByUsername() 
	 * method when needed to fetch user details for 
	 * authentication.
	 */
	@Override
	public UserDetails loadUserByUsername(String username6) throws UsernameNotFoundException {
		System.out.println("Inside UserFetals service");
		
		if(!username6.equals("Shubham")) 
			throw new UsernameNotFoundException("Username "+ username6+ " not found");
		
		Set<Role> roles = new HashSet<Role>();
		roles.add(new Role(1, "USER"));
		
		return new ApplicationUser(1,"Shubham", passwordEncoder.encode("password"), roles);
		
	}

}
